name: Deploy to Vercel

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  pre-checks:
    name: Pre-deployment Checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run TypeScript check
        run: npm run type-check

      - name: Run ESLint
        run: npm run lint

      - name: Run pre-deploy validation
        run: npm run pre-deploy

      - name: Build test
        run: npm run build
        env:
          GOOGLE_SHEETS_WEB_APP_URL: ${{ secrets.GOOGLE_SHEETS_WEB_APP_URL }}
          GOOGLE_SHEETS_ENABLED: true
          NEXT_PUBLIC_DEV_MODE: false

  deploy-preview:
    name: Deploy Preview
    runs-on: ubuntu-latest
    needs: pre-checks
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        env:
          GOOGLE_SHEETS_WEB_APP_URL: ${{ secrets.GOOGLE_SHEETS_WEB_APP_URL }}
          GOOGLE_SHEETS_ENABLED: true
          NEXT_PUBLIC_DEV_MODE: false

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
          echo "preview_url=$url" >> $GITHUB_OUTPUT

      - name: Comment PR with preview URL
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment =>
              comment.user.type === 'Bot' && comment.body.includes('Preview deployment')
            );

            const commentBody = `## ðŸš€ Preview deployment

            âœ… **Preview URL:** ${{ steps.deploy.outputs.preview_url }}

            ðŸ“Š **Performance Check:**
            - Test the form submission
            - Verify Google Sheets integration
            - Check mobile responsiveness
            - Validate Core Web Vitals

            ðŸ”— **Test Links:**
            - [Landing Page](${{ steps.deploy.outputs.preview_url }})
            - [Inscription Form](${{ steps.deploy.outputs.preview_url }}/inscricao)
            - [Thank You Page](${{ steps.deploy.outputs.preview_url }}/inscricao/obrigado)

            ---
            *Deployment powered by [Vercel](https://vercel.com)*`;

            if (botComment) {
              github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

  deploy-production:
    name: Deploy Production
    runs-on: ubuntu-latest
    needs: pre-checks
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          GOOGLE_SHEETS_WEB_APP_URL: ${{ secrets.GOOGLE_SHEETS_WEB_APP_URL }}
          GOOGLE_SHEETS_ENABLED: true
          NEXT_PUBLIC_DEV_MODE: false

      - name: Deploy Project Artifacts to Vercel
        id: deploy
        run: |
          url=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
          echo "production_url=$url" >> $GITHUB_OUTPUT

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            ${{ steps.deploy.outputs.production_url }}
            ${{ steps.deploy.outputs.production_url }}/inscricao
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true

      - name: Comment deployment success
        uses: actions/github-script@v7
        with:
          script: |
            const output = `## ðŸŽ‰ Production Deployment Successful!

            âœ… **Production URL:** ${{ steps.deploy.outputs.production_url }}

            ### ðŸ“Š Next Steps:
            1. **Monitor Performance** - Check Vercel Analytics
            2. **Test Form Integration** - Verify Google Sheets connection
            3. **SEO Validation** - Submit to Google Search Console
            4. **Marketing Ready** - Landing page ready for campaigns

            ### ðŸ”— Important Links:
            - [Production Site](${{ steps.deploy.outputs.production_url }})
            - [Vercel Dashboard](https://vercel.com/dashboard)
            - [Analytics](https://vercel.com/analytics)

            ### ðŸš€ Campaign Ready Features:
            - âš¡ Lighthouse Score optimized
            - ðŸ“± Mobile-first responsive design
            - ðŸŽ¯ Conversion tracking configured
            - ðŸ”’ Security headers implemented
            - ðŸ“ˆ SEO optimized

            ---
            *Ready to launch Alfredo's mentorship campaigns! ðŸš€*`;

            github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: output
            });

  performance-audit:
    name: Performance Audit
    runs-on: ubuntu-latest
    needs: deploy-production
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Wait for deployment
        run: sleep 30

      - name: Audit URLs with Lighthouse CI
        uses: treosh/lighthouse-ci-action@v10
        with:
          urls: |
            https://alfredo-landing.vercel.app
            https://alfredo-landing.vercel.app/inscricao
          configPath: './.lighthouserc.json'
          uploadArtifacts: true
          temporaryPublicStorage: true